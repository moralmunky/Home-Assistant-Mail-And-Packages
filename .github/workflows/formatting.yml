name: "Validation and Formatting"

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  validate_hacs:
    name: "HACS Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - name: HACS Action
        uses: "hacs/action@main"
        with:
          category: "integration"
  validate_hassfest:
    name: "Hassfest Validation"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: home-assistant/actions/hassfest@master
  validate_flake8:
    name: "flake8"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-3
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install --upgrade -r requirements.txt wemake-python-styleguide
      - name: Check for fatal errors
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Docstrings
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=D,DAR
      - name: Small tweaks that might help, but might conflict or be inconvenient
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=WPS323,WPS336,WPS305,WPS420,WPS440,WPS441,WPS515,E800\:,WPS421,W503,WPS412
      - name: Trailing commas and isort
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=I,C81
      - name: Overcomplex code
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=WPS201,WPS210,WPS214,WPS221,WPS229,WPS226
      - name: Useless stuff
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=F401,F841,WPS327,WPS503,WPS504,WPS507
      - name: Bandit
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=S
      - name: Clarity and quality improvements
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --select=WPS432,WPS110,WPS111,WPS322,E501
      - name: General stats
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics \
            --ignore=D,DAR,WPS323,WPS336,WPS305,WPS420,WPS440,WPS441,WPS515,E800\:,WPS421,W503,WPS412,I,C81,WPS201,WPS210,WPS214,WPS221,WPS229,WPS226,F401,F841,WPS327,WPS503,WPS504,WPS507,S,WPS432,WPS110,WPS111,WPS322,E501
  format:
    name: "Format with black and isort"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-2
          restore-keys: |
            ${{ runner.os }}-pip-2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install --upgrade -r requirements.txt -r requirements_format.txt
      - name: Pull again
        run: git pull || true
      - name: Run formatting
        run: |
          python -m isort -v --profile black .
          python -m black -v .
      - name: Commit files
        run: |
          if [ $(git diff HEAD | wc -l) -gt 30 ]
          then
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions"
          git commit -a --amend --no-edit || true
          git push --force || true
          fi
